name: Bump and Release
on:
  push:
    branches:
      - '**'

permissions:
  contents: write

jobs:
  bump-choice:
    runs-on: ubuntu-latest
    outputs:
      user-choice: ${{ steps.bump.outputs.user-choice }}
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Get bump input from Telegram
        id: bump
        uses: ./
        with:
          telegram-api-token: ${{ secrets.TELEGRAM_API_TOKEN }}
          telegram-chat-id: ${{ secrets.TELEGRAM_CHAT_ID }}
          question: 'Which bump type you wish to perform?'
          options: '["prerelease", "patch", "minor", "major", "skip"]'
          default-choice: 'skip'
          message: 'The selected bump type is: %s'
          timeout: 60
          wait-for-timeout-to-finish: true

  bump:
    runs-on: ubuntu-latest
    needs: bump-choice
    if: needs.bump-choice.outputs.user-choice != 'skip'
    outputs:
      latest-tag: ${{ steps.get-tag.outputs.latest-tag }}
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Setup git config
        run: |
          git config user.name "GitHub Actions"
          git config user.email "${{ secrets.GIT_CONFIG_EMAIL }}"

      - name: Bump version
        run: npm version ${{ needs.bump-choice.outputs.user-choice }} -m "v%s"

      - name: Push
        run: git push --follow-tags

      - name: Get latest tag from git
        id: get-tag
        run: echo "latest-tag=$(git describe --abbrev=0 --tags)" >> $GITHUB_OUTPUT

  github-release:
    runs-on: ubuntu-latest
    permissions:
      contents: write
    needs: bump
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Check if should release
        id: should-release
        uses: ./
        with:
          telegram-api-token: ${{ secrets.TELEGRAM_API_TOKEN }}
          telegram-chat-id: ${{ secrets.TELEGRAM_CHAT_ID }}
          question: 'Should release to Github the latest tag?'
          options: '["yes", "no"]'
          default-choice: 'no'
          message: 'The selected choice is: %s'
          timeout: 60
          wait-for-timeout-to-finish: true

      - name: Create Github release
        if: steps.should-release.outputs.user-choice == 'yes'
        uses: ncipollo/release-action@v1
        with:
          tag: ${{ needs.bump.outputs.latest-tag }}
          generateReleaseNotes: true

      - name: Build release message
        if: steps.should-release.outputs.user-choice == 'yes'
        run: echo "MESSAGE=New version ${{ needs.bump.outputs.latest-tag }} released successfully" >> $GITHUB_ENV

      - name: Build bump message
        if: steps.should-release.outputs.user-choice == 'no'
        run: echo "MESSAGE=New version ${{ needs.bump.outputs.latest-tag }} bumped successfully" >> $GITHUB_ENV

      - name: Send success message
        uses: ./
        with:
          telegram-api-token: ${{ secrets.TELEGRAM_API_TOKEN }}
          telegram-chat-id: ${{ secrets.TELEGRAM_CHAT_ID }}
          simple-message: ${{ env.MESSAGE }}

      - name: Failure message
        if: failure()
        uses: ./
        with:
          telegram-api-token: ${{ secrets.TELEGRAM_API_TOKEN }}
          telegram-chat-id: ${{ secrets.TELEGRAM_CHAT_ID }}
          simple-message: 'Failure occurred with the new version ${{ needs.bump.outputs.latest-tag }}'
